package br.com.alura.gerenciador.servlet;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class Banco {
	
	private static List<Empresa> listaEmpresas = new ArrayList<>();
	private static Integer chaveSequencial = 1;

	static {
		Empresa empresa = new Empresa();
		empresa.setId(chaveSequencial++);
		empresa.setNome("Alura");
		
		Empresa empresa2 = new Empresa();
		empresa2.setId(chaveSequencial++);
		empresa2.setNome("Caelum");
		
		listaEmpresas.add(empresa);
		listaEmpresas.add(empresa2);
	}
	public void adicionar(Empresa empresa) {
		empresa.setId(Banco.chaveSequencial++);
		Banco.listaEmpresas.add(empresa);
	}

	public List<Empresa> getEmpresas(){
		return Banco.listaEmpresas;
	}

	public void removeEmpresa(Integer id) {
		
		// Usando o Iterator do tipo Empresa que recebe a lsiat de empresas com o método iterator(). Para iterar precisamos o usar o método hasNext() ou seja, 
		// você tem um proximo elemento?? e o iterator vai responder se tem ou não.
		// Vamos usar o while para saber ( enquanto tiver proximo),{ empresa me dá o proximo elemento it.next()}; 
		// Depois a condição que verifica se o id da próxima empresa do iterator é igual ao id recebido no parametro, se for o iterator remove.
		Iterator<Empresa> it = listaEmpresas.iterator();
		
		while(it.hasNext()) {
			
			Empresa empresa = it.next();
			
			if(empresa.getId() == id) {
				it.remove();
			}
		}
		
		
		
		// Iterando com o for: Porém quando clicamos em remover o for não consegue iterar e alterar a lista ao mesmo tempo.Para isso vamos usar o Iterator
		// Primeiro fazemos um laço usando nossa lista e a cada iteração perguntamos se o id da empresa é igual ao id do parametro.
		//		for (Empresa empresa : listaEmpresas) {
		//			if(empresa.getId() == id) {
		//				listaEmpresas.remove(empresa);
		//			}
		//			
		//		}
		
	}
	
}
